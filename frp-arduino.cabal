name:                frp-arduino
version:             0.1.1.0
synopsis:            Arduino programming without the hassle of C.
description:
            frp-arduino provides the basic building blocks to program
            your Arduino Nano, Arduino Uno or compatible hardware
            using Haskell and Functional Reactive Programming (FRP).
            .
            frp-arduino compiles a subset of Haskell (embedded
            domain-specific language, or EDSL) to C and then uses the
            standard `avr-g++` Arduino cross-compiler behind the
            scenes. However, the C parts are completely hidden thanks
            to a `make` wrapper script that builds on top of the
            Arduino-Makefile project (see
            https://github.com/sudar/Arduino-Makefile), thus
            letting you build and upload your Haskell code to your
            hardware in a single command.
homepage:            http://github.com/frp-arduino/frp-arduino
license:             GPL-3
license-file:        COPYING
author:              Rickard Lindberg
maintainer:          ricli85@gmail.com
category:            Language
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10
Tested-With:         GHC ==8.6.4

library
  exposed-modules:
    Arduino.Uno
    Arduino.Nano
    Arduino.DSL
    Arduino.Library
    Arduino.Library.LCD
    Arduino.Library.Tuples
    Arduino.Library.Time
  other-modules:
    Arduino.Internal.DAG
    Arduino.Internal.CodeGen.C
    Arduino.Internal.CodeGen.Dot
    Arduino.Internal.CodeGen.BlockDoc
  build-depends:
    base == 4.*,
    mtl,
    containers
  hs-source-dirs: src
  default-language: Haskell2010
